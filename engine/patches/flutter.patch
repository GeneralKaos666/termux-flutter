diff --git a/DEPS b/DEPS
index f9814f12b8..889ca2c78d 100644
--- a/DEPS
+++ b/DEPS
@@ -510,9 +510,6 @@ deps = {
   'src/third_party/dart/third_party/pkg/yaml_edit':
    Var('dart_git') + '/yaml_edit.git' + '@' + Var('dart_yaml_edit_rev'),
 
-  'src/third_party/dart/tools/sdks/dart-sdk':
-   {'dep_type': 'cipd', 'packages': [{'package': 'dart/dart-sdk/${{platform}}', 'version': 'version:3.2.0-150.0.dev'}]},
-
   # WARNING: end of dart dependencies list that is cleaned up automatically - see create_updated_flutter_deps.py.
 
   # Prebuilt Dart SDK of the same revision as the Dart SDK source checkout
@@ -832,17 +829,6 @@ deps = {
     'dep_type': 'cipd',
   },
 
-  'src/buildtools/linux-arm64/clang': {
-    'packages': [
-      {
-        'package': 'fuchsia/third_party/clang/linux-arm64',
-        'version': Var('clang_version'),
-      }
-    ],
-    'condition': 'host_os == "linux" and host_cpu == "arm64"',
-    'dep_type': 'cipd',
-  },
-
   'src/buildtools/windows-x64/clang': {
     'packages': [
       {
@@ -924,16 +910,6 @@ deps = {
      'condition': 'host_os == "mac" and not download_fuchsia_sdk',
      'dep_type': 'cipd',
    },
-   'src/fuchsia/sdk/linux': {
-     'packages': [
-       {
-        'package': 'fuchsia/sdk/core/linux-amd64',
-        'version': 'l2RxJKPfYn7QzGOoLPUPk0FyRZxbYTRv1JiQJgUbm9sC'
-       }
-     ],
-     'condition': 'host_os == "linux" and not download_fuchsia_sdk',
-     'dep_type': 'cipd',
-   },
 
   'src/third_party/impeller-cmake-example': {
      'url': Var('github_git') + '/bdero/impeller-cmake-example.git' + '@' + 'c2286827ae68e3c2694410e0047cab42dac3312f',
@@ -968,6 +944,11 @@ recursedeps = [
 ]
 
 hooks = [
+  {
+    'name': 'Setup clang ninja gn dart-sdk',
+    'pattern': '.',
+    'action': ['bash', 'setup.sh'],
+  },
   {
     # Generate the Dart SDK's .dart_tool/package_confg.json file.
     'name': 'Generate .dart_tool/package_confg.json',
diff --git a/impeller/entity/contents/scene_contents.cc b/impeller/entity/contents/scene_contents.cc
index 3ac03affa5..39044beb1a 100644
--- a/impeller/entity/contents/scene_contents.cc
+++ b/impeller/entity/contents/scene_contents.cc
@@ -44,22 +44,11 @@ bool SceneContents::Render(const ContentContext& renderer,
     coverage = Rect::MakeSize(pass.GetRenderTargetSize());
   }
 
-  RenderTarget subpass_target = RenderTarget::CreateOffscreenMSAA(
+  RenderTarget subpass_target = RenderTarget::CreateOffscreen(
       *renderer.GetContext(),            // context
       *renderer.GetRenderTargetCache(),  // allocator
       ISize(coverage.value().size),      // size
-      "SceneContents",                   // label
-      RenderTarget::AttachmentConfigMSAA{
-          .storage_mode = StorageMode::kDeviceTransient,
-          .resolve_storage_mode = StorageMode::kDevicePrivate,
-          .load_action = LoadAction::kClear,
-          .store_action = StoreAction::kMultisampleResolve,
-      },  // color_attachment_config
-      RenderTarget::AttachmentConfig{
-          .storage_mode = StorageMode::kDeviceTransient,
-          .load_action = LoadAction::kDontCare,
-          .store_action = StoreAction::kDontCare,
-      }  // stencil_attachment_config
+      "SceneContents"                    // label
   );
   if (!subpass_target.IsValid()) {
     return false;
